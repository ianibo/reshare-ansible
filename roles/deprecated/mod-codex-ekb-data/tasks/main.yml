---
# wait a few seconds to make sure modules are spun up
- wait_for: timeout=10
  
- name: set fact mod_codex_ekb_module
  set_fact:
    mod_codex_ekb_module: "{{ okapi_modules|selectattr('id','match','^'+mod_codex_ekb_prefix+'(-[0-9].*)?$')|list }}"

- name: Check mod-codex-ekb deployment
  uri: 
    url: "{{ okapi_url }}/_/discovery/modules/{{ mod_codex_ekb_module.0.id }}"
    status_code: 200, 404
  register: mod_codex_ekb_deploy
  when: not top_down_install

- name: Set mod-codex-ekb deployment status for top down install
  set_fact: 
    mod_codex_ekb_deploy:
      status: 200
  when: mod_codex_ekb_deploy.skipped is defined and mod_codex_ekb_deploy.skipped
      
- name: Check tenant mod-codex-ekb registration
  uri:
    url: "{{ okapi_url }}/_/proxy/tenants/diku/modules/{{ mod_codex_ekb_module.0.id }}"
    status_code: 200, 404
  when: mod_codex_ekb_deploy.status == 200
  register: tenant_mod_codex_ekb

- name: Enable mod-codex-ekb module for tenant
  uri:
    url: "{{ okapi_url }}/_/proxy/tenants/diku/modules"
    method: POST
    body_format: json
    body: '{ "id" : "{{ mod_codex_ekb_module.0.id }}" }'
    status_code: 201
  register: mod_codex_ekb_enable
  changed_when: mod_codex_ekb_enable.status == 201
  when: tenant_mod_codex_ekb.status == 404 and not top_down_install

- name: Login as {{ admin_user.username }}
  uri: 
    url: "{{ okapi_url }}/authn/login"
    method: POST
    body_format: json
    headers: 
      X-Okapi-Tenant: diku
      Accept: application/json
    body: "{ 'username' : '{{ admin_user.username }}', 'password' : '{{ admin_user.password }}' }"
    status_code: 201
  register: mod_codex_ekb_login
  when: mod_codex_ekb_deploy.status == 200 and auth_required

- name: Assign mod-codex-ekb permissions to other users (auth by username)
  uri: 
    url: "{{ okapi_url }}/perms/users/{{ item.0.username }}/permissions"
    method: POST
    body_format: json
    headers: 
      X-Okapi-Tenant: diku
      X-Okapi-Token: "{{ mod_codex_ekb_login.x_okapi_token }}"
      Accept: application/json
    body:  '{ "permissionName" : "{{ item.1 }}" }'
    status_code: 200,422
  register: mod_codex_ekb_perms
  changed_when: mod_codex_ekb_perms.status == 200
  with_subelements: 
    - "{{ mod_codex_ekb_permissions }}"
    - permissions
  when: mod_codex_ekb_deploy.status == 200 and auth_required and auth_by_username

- name: Assign mod-codex-ekb permissions to other users (auth by id)
  uri: 
    url: "{{ okapi_url }}/perms/users/{{ item.0.perms_user_id }}/permissions"
    method: POST
    body_format: json
    headers: 
      X-Okapi_Tenant: diku
      X-Okapi-Token: "{{ mod_codex_ekb_login.x_okapi_token }}"
      Accept: application/json
    body: '{ "permissionName" : "{{ item.1 }}" }'
    status_code: 200,422
  register: mod_codex_ekb_perms
  changed_when: mod_codex_ekb_perms.status == 200
  with_subelements: 
    - "{{ mod_codex_ekb_permissions }}" 
    - permissions
  when: mod_codex_ekb_deploy.status == 200 and auth_required and not auth_by_username 
 
# Add RM API key
- name: Add RM API customer ID
  uri: 
    url: "{{ okapi_url }}/configurations/entries"
    method: POST
    body_format: json
    headers: 
      Authtoken-Refresh-Cache: "true"
      X-Okapi-Tenant: diku
      X-Okapi-Token: "{{ mod_codex_ekb_login.x_okapi_token }}"
      Accept: application/json
    body: '{ "module": "EKB", "configName": "api_access", "code": "kb.ebsco.customerId", "description": "EBSCO RM-API Customer ID", "enabled": true, "value": "{{ rmapi_custid }}" }'
    status_code: 201,422
  register: mod_codex_ekb_custid 
  changed_when: mod_codex_ekb_custid.status == 201
  when: mod_codex_ekb_deploy.status == 200 and auth_required and rmapi and rmapi_custid
   
- name: Add RM API key
  uri: 
    url: "{{ okapi_url }}/configurations/entries"
    method: POST
    body_format: json
    headers: 
      X-Okapi-Tenant: diku
      X-Okapi-Token: "{{ mod_codex_ekb_login.x_okapi_token }}"
      Accept: application/json
    body: '{ "module": "EKB", "configName": "api_access", "code": "kb.ebsco.apiKey", "description": "EBSCO RM-API API Key", "enabled": true, "value": "{{ rmapi_key }}" }'
    status_code: 201,422
  register: mod_codex_ekb_apikey
  changed_when: mod_codex_ekb_apikey.status == 201
  when: mod_codex_ekb_deploy.status == 200 and auth_required and rmapi and rmapi_key

- name: Add RM API URL
  uri: 
    url: "{{ okapi_url }}/configurations/entries"
    method: POST
    body_format: json
    headers: 
      X-Okapi-Tenant: diku
      X-Okapi-Token: "{{ mod_codex_ekb_login.x_okapi_token }}"
      Accept: application/json
    body: '{ "module": "EKB", "configName": "api_access", "code": "kb.ebsco.url", "description": "EBSCO RM-API URL", "enabled": true, "value": "{{ rmapi_url }}" }'
    status_code: 201,422
  register: mod_codex_ekb_url
  changed_when: mod_codex_ekb_url.status == 201
  when: mod_codex_ekb_deploy.status == 200 and auth_required and rmapi and rmapi_url
